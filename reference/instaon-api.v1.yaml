openapi: 3.0.0
info:
  title: Instaon API
  version: '1.0'
  contact:
    name: Patrick De Caluw√©
    email: patrick@instaon.io
    url: 'https://instaon.io/partners'
  termsOfService: 'https://instaon.io/en/terms'
  description: ''
servers:
  - url: 'https://instaon.io/api/'
paths:
  campaigns:
    get:
      summary: Get list of campaigns
      tags:
        - campaigns
      responses:
        '200':
          description: OK
      operationId: get-campaigns
      requestBody: {}
    patch:
      summary: Create a campaign
      tags: []
      responses:
        '200':
          description: OK
      operationId: patch-campaigns
      requestBody: {}
    delete:
      summary: Delete a campaign
      tags: []
      responses:
        '200':
          description: OK
      operationId: delete-campaigns
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
        description: ''
    parameters: []
  users/login:
    post:
      summary: Login to receive an access token
      tags:
        - users
      responses: {}
      operationId: post-users-login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: decaluwe.patrick3@gmail.com
                password:
                  type: string
                  example: decaluwe.patrick3@gmail.com
        description: "{ \n   \"email\":\"decaluwe.patrick3@gmail.com\",\n   \"password\":\"decaluwe.patrick3@gmail.com\"\n}"
      parameters: []
      security:
        - API Key - 1: []
      description: ''
    parameters: []
  suggestions:
    get:
      summary: Get suggestions to improve campaigns
      tags: []
      responses: {}
      operationId: get-suggestions
      parameters:
        - schema:
            type: string
          in: query
          name: sdsf
    parameters: []
components:
  schemas: {}
  securitySchemes:
    API Key - 1:
      type: oauth2
      flows:
        authorizationCode:
          scopes: {}
      description: ''
